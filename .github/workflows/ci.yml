name: Build, Test, and Deploy (Gradle)

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Kodu klonla
        uses: actions/checkout@v3

      - name: Java quraşdır (21)
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Gradle wrapper-a icazə ver
        run: chmod +x ./gradlew

      - name: Gradle cache istifadə et
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle

      - name: Build et və testləri işə sal
        run: ./gradlew build

      # Test Coverage reportu əlavə edirik
      - name: Test Coverage
        run: ./gradlew jacocoTestReport
        continue-on-error: true

      # Testləri GitHub Actions-a əlavə edirik (JUnit XML)
      - name: Upload Test Results
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: build/test-logs/

      # Sonra Docker image yaratmaq (Əgər Docker ilə deploy edirsənsə)
      - name: Docker Build
        run: docker build -t my-app .

      # GitHub Pages (məqsədli deploy)
      - name: Deploy to Render or Heroku
        run: |
          echo "Deploying to Heroku..."
          # buraya Heroku/Render deploy əmrini yaz

  notify:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ always() }}
    steps:
      - name: Notify Slack (success/fail)
        if: ${{ failure() }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Build failed! Please check!"}' ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack (success/fail)
        if: ${{ success() }}
        run: |
          curl -X POST -H 'Content-type: application/json' --data '{"text":"Build successful!"}' ${{ secrets.SLACK_WEBHOOK_URL }}
